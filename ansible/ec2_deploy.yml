- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Identify running instances for termination
      amazon.aws.ec2_instance_info:
        region: us-east-1
        filters:
          instance-type: t2.small
        aws_access_key: {{aws_access_key}}
        aws_secret_key: cgRUJfdQAcWPDzQiiNPwSsAjWH7gPY1p5ipOgbT2
        security_token: FwoGZXIvYXdzEF4aDMj9+a6D4kfCp86m0iK3AfxCA5R7mGhIFjk03sGiFm+kBYRpvy1rOgea9+0R4Z4/m8Wu984GkBqm93glrwFDcXGQIg90Efqs5JAKNj9VGeAvaGlEclvoYBd307NIEMjd+v1ZMFgJ8eSgK+ywaeDbhHCGqW8QQbP6l9J1O27jjRiznStn9NtaAkNMQNmMDioI/tHn1xHI9z/hMC//PlUJ9uFoO1WvYMQe4jd1X452ZFEaW12uJ3dOG/hSLvcNCE6eUBxi73l4SCjFwNmNBjItDkrxseGNy5hSB0vgsUk3rB+/4hiXGynjj6NuQpnh/TR6QxODuGFKJswL/IPO
      register: ec2_stat

    - name: Launch EC2 instance
      amazon.aws.ec2:
        instance_type: t2.small
        image: ami-04902260ca3d33422
        region: us-east-1
        key_name: devops
        vpc_subnet_id: subnet-0eec369f8dccaedd9
        assign_public_ip: yes
        count: 1
        group: eshop
        wait: true
        aws_access_key: ASIAQ55RRQP4Q7ENTI7R
        aws_secret_key: cgRUJfdQAcWPDzQiiNPwSsAjWH7gPY1p5ipOgbT2
        security_token: FwoGZXIvYXdzEF4aDMj9+a6D4kfCp86m0iK3AfxCA5R7mGhIFjk03sGiFm+kBYRpvy1rOgea9+0R4Z4/m8Wu984GkBqm93glrwFDcXGQIg90Efqs5JAKNj9VGeAvaGlEclvoYBd307NIEMjd+v1ZMFgJ8eSgK+ywaeDbhHCGqW8QQbP6l9J1O27jjRiznStn9NtaAkNMQNmMDioI/tHn1xHI9z/hMC//PlUJ9uFoO1WvYMQe4jd1X452ZFEaW12uJ3dOG/hSLvcNCE6eUBxi73l4SCjFwNmNBjItDkrxseGNy5hSB0vgsUk3rB+/4hiXGynjj6NuQpnh/TR6QxODuGFKJswL/IPO
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 30
        timeout: 300
      loop: "{{ ec2.instances }}"

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Add Centos Extras
      shell: yum-config-manager --enable extras
      become: yes
    - name: Enable docker package
      shell: amazon-linux-extras enable docker
      become: yes
    - name: Install Docker and git
      yum:
        name:
          - docker
          - git
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Set rights to Docker
      shell: usermod -a -G docker ec2-user
      become: yes
    - name: Checkout Git repo
      git:
        repo: "https://github.com/friedmannmartin/4IT572_docker.git"
        dest: ./app
    - name: Build eshop docker
      shell: cd app && docker build -t eshop:latest .
      become: yes
    - name: Run eshop
      shell: docker run -p 80:3000 eshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate instances
  hosts: localhost
  connection: local

  tasks:
  - name: Terminate running instances
    amazon.aws.ec2:
      region: us-east-1
      state: absent
      aws_access_key: ASIAQ55RRQP4Q7ENTI7R
      aws_secret_key: cgRUJfdQAcWPDzQiiNPwSsAjWH7gPY1p5ipOgbT2
      security_token: FwoGZXIvYXdzEF4aDMj9+a6D4kfCp86m0iK3AfxCA5R7mGhIFjk03sGiFm+kBYRpvy1rOgea9+0R4Z4/m8Wu984GkBqm93glrwFDcXGQIg90Efqs5JAKNj9VGeAvaGlEclvoYBd307NIEMjd+v1ZMFgJ8eSgK+ywaeDbhHCGqW8QQbP6l9J1O27jjRiznStn9NtaAkNMQNmMDioI/tHn1xHI9z/hMC//PlUJ9uFoO1WvYMQe4jd1X452ZFEaW12uJ3dOG/hSLvcNCE6eUBxi73l4SCjFwNmNBjItDkrxseGNy5hSB0vgsUk3rB+/4hiXGynjj6NuQpnh/TR6QxODuGFKJswL/IPO
      instance_ids: '{{ item.instance_id }}'
    loop: "{{ ec2_stat.instances }}"
    loop_control:
      label: "{{ item.instance_id }}"
